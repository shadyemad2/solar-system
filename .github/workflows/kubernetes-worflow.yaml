name: Deploy GA Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/ga-application:${{ github.sha }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.26.0'

      - name: Configure Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Replace tokens in manifests
        uses: danielr1996/envsubst-action@1.1.0
        env:
          IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/ga-application:${{ github.sha }}
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
        with:
          input: "kubernetes/production/deployment.yaml"
          output: "kubernetes/production/deployment.yaml"

      - name: Replace tokens in service
        uses: danielr1996/envsubst-action@1.1.0
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
        with:
          input: "kubernetes/production/service.yaml"
          output: "kubernetes/production/service.yaml"

      - name: Create Kubernetes namespace (if not exists)
        run: |
          kubectl create ns ${{ vars.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Create MongoDB secret
        run: |
          kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ vars.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/production/
          kubectl get all -n ${{ vars.NAMESPACE }}

